#! /bin/sh
config_host_mak="config-host.mak"

kern_ver=`uname -r`
objdir=$(pwd)/out
enable_lkm=NO
enable_libbpf=NO
disable_libbpf=NO
static_link=no
enable_all=no
default_target=yes
kernel_bpf_support=NO
disable_list=test

usage() {
	echo "Usage: configure [options]"
	echo "options:"
	echo "  --kernel=KERNEL_VERSION    kernel version"
	echo "  --buiddir=OBJDIR           the build dir"
	echo "  --enable-lkm               enable linux kernel module"
	echo "  --enable-libbpf            enable libbpf"
	echo "  --disable-libbpf           disable all bpf tools"
	echo "  --enable-static            static link for c/cpp tools"
	echo "  --enable-target-xxx        xxx is the actual tool, like memleak, you may use --show-target to list all"
	echo "  --enable-target-all        enable all compoents"
	echo "  --disable-default          disable default compoents to built-in"
	echo "  --disable-target-xxx       xxx is the actual tool, like memleak, you may use --show-target to list all"
	echo "  --show-target              list all support tools"
}

check_bpf_kernel() {
	kern_major=$(echo $kern_ver | awk -F '.' '{print $1}')
	kern_minor=$(echo $kern_ver | awk -F '.' '{print $2}')
	is_centos7=$(echo $kern_ver | grep el7 | wc -l)

	if [ $((kern_major)) -ge 4 -a $((kern_minor)) -ge 4 ]; then
		kernel_bpf_support="YES"
	fi

	if [ $is_centos7 = 1 ]; then
		centos_minor=$(echo $kern_ver | awk -F '-' '{print $2}' | awk -F '.' '{print $1}')
		if [ $((centos_minor)) -ge 957 ];then
			kernel_bpf_support="YES"
		fi
	fi

	if [ $kernel_bpf_support != "YES" ];then
		echo "this kernel version not support ebpf"
		exit 1
	else
		echo "check kernel bpf support OK"
	fi
}

check_bpf_depend() {
	check_bpf_kernel
	if [ $kernel_bpf_support = "YES" ];then
		clang -v > /dev/null
		if [ $? = 0 ];then
			echo "check clang OK"
		else
			echo "check clang failed, should intall first"
			exit 1
		fi
	fi
}

check_lkm_depend() {
	rpm -q kernel-devel-$kern_ver > /dev/null
	if [ $? != 0 ];then
		echo "check kernel-devel-$kern_ver failed, should intall first"
		exit 1;
	fi
}

check_depend() {
	if [ $enable_lkm = "YES" ]; then
		check_lkm_depend
	fi
	if [ $enable_libbpf = "YES" ]; then
		check_bpf_depend
	fi
}

for opt; do
	optarg=$(expr "x$opt" : 'x[^=]*=\(.*\)')
	case "$opt" in
		--kernel=*)
			kern_ver=$optarg
			;;
		--buiddir=*)
			objdir=$(readlink -f $optarg)
			;;
		--enable-lkm)
			enable_lkm="YES"
			;;
		--enable-libbpf)
			enable_libbpf="YES"
			;;
		--disable-libbpf)
			disable_libbpf="YES"
			;;
		--enable-static)
			static_link="yes"
			;;
		--enable-target-*)
			target=$(expr "$opt" : '--enable-target-\(.*\)')
			if [ $target = "all" ]; then
				enable_all="yes"
			else
				target_list="$target $target_list"
			fi
			;;
		--disable-default)
			default_target=no
			;;
		--disable-target-*)
			disable=$(expr "$opt" : '--disable-target-\(.*\)')
			disable_list="$disable|$disable_list"
			;;
		--show-target)
			grep -nrw "target :=" $(pwd)/source/tools/ | awk '{print $3}' | grep -v test
			exit
			;;
		*)
			usage
			exit
			;;
	esac
done

if [ $static_link = "yes" ]; then
echo "EXTRA_LDFLAGS = --static" >> $config_host_mak
fi

if [ $default_target = "yes" ]; then
    target_list="tcp_syn_drop cpuirq sysmonitor cpu_flamegraph $target_list"
fi
for i in $target_list;do
	target_files="$(grep -nrw "target := $i" $(pwd)/source/tools/ | awk -F ":" '{print $1}') $target_files"
done

if [ $disable_libbpf = "YES" ]; then
disable_target=$(grep "bpf\.mk" $(pwd)/source/tools/ -nEr --color | xargs -I {} expr {} : '.*/source/tools/\(.*\)/\(.*\)' | awk -F "/" '{print$2}' | uniq)
for single_target in $disable_target;do
disable_list="$single_target|$disable_list"
done
fi

if [ $enable_all = "yes" ]; then
target_files=$(grep -nrw "target :=" $(pwd)/source/tools/ | grep -vwE $disable_list | awk -F ":" '{print $1}')
fi

for file in $target_files;do
target_path=$(dirname $file)
target_paths="$target_path $target_paths"
grep -nrw modin $file > /dev/null
if [ $? = 0 ]; then
	enable_lkm="YES"
	echo "$target_path need lkm"
fi

grep -nr "bpf.mk" $file > /dev/null
if [ $? = 0 ]; then
	enable_libbpf="YES"
	echo "$target_path need libbpf"
fi

done

check_depend

echo "# Automatically generated by configure - do not modify" > $config_host_mak

echo "KERNEL_VERSION = $kern_ver" >> $config_host_mak
echo "OBJPATH = $objdir" >> $config_host_mak
echo "BUILD_KERNEL_MODULE = $enable_lkm" >> $config_host_mak
echo "BUILD_LIBBPF = $enable_libbpf" >> $config_host_mak


echo "TARGET_LIST = $target_paths" >> $config_host_mak


